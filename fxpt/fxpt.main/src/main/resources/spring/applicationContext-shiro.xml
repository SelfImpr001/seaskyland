<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       	http://www.springframework.org/schema/util
       	http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd">
    <aop:aspectj-autoproxy proxy-target-class="true" />
    
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="com.cntest.common.config.SystemRuntimeConfiguration.setAppKey"/>
        <property name="arguments" value="${shiro.app.key}"/>
    </bean>
    
    <!-- 缓存管理器 使用Ehcache实现 -->
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="com.cntest.foura.application.permission.RetryLimitHashedCredentialsMatcher">
		<constructor-arg ref="shiroCacheManager"/> 
        <property name="hashAlgorithmName" value="${shiro.password.algorithmName}"/>
        <property name="hashIterations" value="${shiro.password.hashIterations}"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>

	<bean id="casRealm" class="org.apache.shiro.cas.CasRealm">
		<property name="casServerUrlPrefix" value="${shiro.sso.server.url}"/>
		<property name="casService" value="${shiro.sso.service.url}"/>
	</bean>	    
    <!-- Realm实现  <property name="passwordService" ref="passwordService"/>-->
    <bean id="userRealm" class="com.cntest.foura.application.permission.UserRealm">      
        <property name="credentialsMatcher" ref="credentialsMatcher"></property>
<!--         <property name="cachingEnabled" value="false"/> -->
        <property name="cachingEnabled" value="false"/>
        <property name="authenticationCachingEnabled" value="false"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="false"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>
    <bean id="studentRealm" class="com.cntest.fxpt.permission.StudentRealm">      
        <property name="cachingEnabled" value="false"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="false"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
        <property name="authenticationTokenClass" value="com.cntest.fxpt.permission.StudentBaseToken"></property>
    </bean>
    <bean id="examineeRealm" class="com.cntest.fxpt.permission.ExamineeRealm">      
        <property name="cachingEnabled" value="false"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="false"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
        <property name="authenticationTokenClass" value="com.cntest.fxpt.permission.StudentBaseToken"></property>
    </bean>         

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="fxpt-sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
        <property name="domain" value=""/>
        <property name="path" value="/"/>
    </bean>
     -->
    <bean id="sessionIdCookie" class="com.cntest.security.shiroimpl.SessionIdCookie">
        <constructor-arg value="${shiro.session.id}"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
        <property name="domain" value=""/>
        <property name="path" value="/"/>
        <property name="filterURLs">
        	<list>
        		<value>/upload/**</value>
        	</list>
        </property>
    </bean>
    
 	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie" >
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
        <property name="domain" value=""/>
        <property name="path" value="/"/>
    </bean>
    
    
    	<!--初始密码修改  -->
	<bean id="isloginup" class="com.cntest.foura.shiro.IsloginAuthenticationFilter">
		<property name="captchaEbabled" value="${shiro.login.captcha}" />
		<property name="captchaParam" value="kaptcha" />
		<property name="loginUrl" value="/login"></property>
		<property name="failureKeyAttribute" value="${shiro.failure.key}" />
	</bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4BvVhmFLUs0KTA3Kprsdag==')}"/>-->
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>    

    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
        
    </bean>

    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
    
    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>
    
    <bean id="authenticationStrategy" class="org.apache.shiro.authc.pam.FirstSuccessfulStrategy"></bean>
    <bean id="authenticator" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
        <property name="authenticationStrategy" ref="authenticationStrategy"></property>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="shiroCacheManager"/>
        <!-- <property name="rememberMeManager" ref="rememberMeManager"/>-->
        <property name="authenticator" ref="authenticator"></property>
        <property name="realms" >
        	<list>
        		<ref bean="casRealm" />
        		<ref bean="userRealm"/>
        	    <ref bean="studentRealm"/>
        	    <ref bean="examineeRealm"/>
        	</list>
        </property>
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

     <bean id="mySessionTimeout" class="com.cntest.security.shiroimpl.SessionTimeoutFilter">
     	<property name="defaultRedirectUrl" value="/login"/>
     </bean>
    
     <bean id="urlCheck" class="com.cntest.security.shiroimpl.UrlCheckFilter">
    	 <property name="failureUrl" value="${shiro.sso.login.url}" />
     </bean>
     
    <bean id="authcFilter" class="com.cntest.security.shiroimpl.CaptchaFormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="loginUrl" value="/login"></property>        
        <property name="failureKeyAttribute" value="${shiro.failure.key}"/>
    </bean>  
     
	<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">
		<property name="failureUrl" value="${shiro.sso.login.url}" />
	</bean>	    
    <!--  -->
    <bean id="studentAuthcFilter" class="com.cntest.fxpt.permission.StudentFormAuthenticationFilter">
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="loginUrl" value="/student/login"/>
        <!--  <property name="successUrl" value="/student/center"/>-->
        <property name="failureKeyAttribute" value="${shiro.failure.key}"/>
    </bean>
            
    <bean id="captchaFilter" class="com.cntest.security.shiroimpl.CaptchaValidateFilter">
        <property name="captchaEbabled" value="${shiro.login.captcha}"/>
        <property name="captchaParam" value="kaptcha"/>
        <property name="loginUrl" value="/login"></property> 
        <property name="failureKeyAttribute" value="${shiro.failure.key}"/>
    </bean>
     <bean id="myLogoutFilter" class="com.cntest.security.shiroimpl.MyLogoutFilter"></bean>
    <!--  
    <bean id="authcFilter" class="com.cntest.security.shiroimpl.AjaxFormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="failureKeyAttribute" value="${shiro.failure.key}"/>
        <property name="captchaEbabled" value="${shiro.login.captcha}"/>
        <property name="captchaParam" value="kaptcha"/>
    </bean> 
     -->  
    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>        
        <property name="successUrl" value="/"/>
        <property name="loginUrl" value="/login"/>
        <property name="unauthorizedUrl" value="/unauthorized"/>
		<property name="filters"> 
			<util:map> 
				<entry key="cas" value-ref="casFilter" />
				<entry key="authc" value-ref="authcFilter"/>
				<entry key="stuAuthc" value-ref="studentAuthcFilter"/>
				<entry key="captchaFilter" value-ref="captchaFilter"/>
				<entry key="myLogoutFilter" value-ref="myLogoutFilter"/>
				<entry key="mySessionTimeout" value-ref="mySessionTimeout"/>
			</util:map> 
		</property>         
        <property name="filterChainDefinitions">
            <value>
           		/getUser/** = anon
           		/updateIslogin/**=anon
                /static/** = anon
				/images/** = anon
				/ns/** = anon
				/systemSet/** = anon
				/500 = anon
				/401 = anon
				/403= anon
				/404 = anon
				/405 = anon
				/result = anon
				/downResult = anon
				/httpResult = anon
				/log/** = anon
				/api/** = anon
				/batch/** = anon
				/personalReport/exec/** = anon
				/student/login = captchaFilter,stuAuthc
				/sso/login=cas
                /login = captchaFilter,isloginup,authc
                /logout = myLogoutFilter
                /** = mySessionTimeout,user,urlCheck
               
            </value>
        </property>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
    	<property name="proxyTargetClass" value="true"></property>
    </bean>
    <!--      
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    -->
</beans>