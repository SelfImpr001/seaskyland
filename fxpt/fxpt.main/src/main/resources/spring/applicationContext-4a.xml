<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/jee 
            http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">
    
    <context:annotation-config />
  
    <context:component-scan base-package="com.cntest.foura.**.service..**" />
    <context:component-scan base-package="com.cntest.foura.**.application.**" />
    <context:component-scan base-package="com.cntest.foura.**.repository.**" />
    <bean id="openResource" class="com.cntest.foura.application.permission.UserResourceService"></bean>
	<bean id="userOrgService" class="com.cntest.foura.application.permission.UserOrgServiceImpl"></bean>
    <!-- 如果进行分库部署，需要启用独立的数据源 -->
    <!--	
	<bean id="ds4a" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	    <property name="url" value="${jdbc.url}" />
	    <property name="username" value="${jdbc.username}" />
	    <property name="password" value="${jdbc.password}" />
	    <property name="initialSize" value="1" />
	    <property name="minIdle" value="1" /> 
	    <property name="maxActive" value="20" />
	    <property name="maxWait" value="60000" />
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />
	    <property name="minEvictableIdleTimeMillis" value="300000" />	  
	    <property name="validationQuery" value="SELECT 'x'" />
	    <property name="testWhileIdle" value="true" />
	    <property name="testOnBorrow" value="false" />
	    <property name="testOnReturn" value="false" />
	    <property name="poolPreparedStatements" value="true" />
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	    <property name="filters" value="stat" /> 
	</bean>
	-->
	<!--  	
    <bean id="4aJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg index="0"><ref bean="4ads"/></constructor-arg>
    </bean>
      
	<bean id="sessionFactory4a" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="ds" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.use_sql_comments">false</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
                <prop key="hibernate.jdbc.fetch_size ">${hibernate.jdbc.fetch_size}</prop>
                <prop key="hibernate.max_fetch_depth ">${hibernate.max_fetch_depth}</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
			</props>
		</property>
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:hibernate/mapping/4a/</value>
			</list>
		</property>
	</bean>
 
	
	<tx:annotation-driven transaction-manager="transactionManager"/> 
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory4a"/>
    </bean>
    -->
</beans>
